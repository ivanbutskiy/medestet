// craco.config.js
const webpack = require('webpack');
const ReactRefreshWebpackPlugin = require('@pmmmwh/react-refresh-webpack-plugin');
const path = require('path');

module.exports = {
  webpack: {
    configure: (config) => {
      // –ê–ª–∏–∞—Å—ã (webpack4 –≤–º–µ—Å—Ç–æ resolve.fallback)
      config.resolve = config.resolve || {};
      config.resolve.alias = {
        ...(config.resolve.alias || {}),
        crypto: require.resolve('crypto-browserify'),
        stream: require.resolve('stream-browserify'),
        buffer: require.resolve('buffer/'),
        // üëâ –ü–æ–ª–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ —Ä–∞–Ω—Ç–∞–π–º-–æ–≤–µ—Ä–ª–µ—è CRA
        'react-error-overlay': path.resolve(__dirname, 'src/__mocks__/react-error-overlay.js'),
      };

      if (process.env.NODE_ENV === 'development') {
        // –£–±–∏—Ä–∞–µ–º ESLint-–ø–ª–∞–≥–∏–Ω (—á—Ç–æ–±—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–ª–∏ —ç–∫—Ä–∞–Ω)
        config.plugins = (config.plugins || []).filter(
          (p) => !(p && p.constructor && p.constructor.name === 'ESLintWebpackPlugin')
        );
        // –í—ã–∫–ª—é—á–∞–µ–º overlay —É React Refresh
        config.plugins = config.plugins.map((p) => {
          if (p && p.constructor && p.constructor.name === 'ReactRefreshWebpackPlugin') {
            return new ReactRefreshWebpackPlugin({ overlay: false });
          }
          return p;
        });
      }

      // –ì–ª–æ–±–∞–ª—ã
      config.plugins.push(
        new webpack.ProvidePlugin({
          Buffer: ['buffer', 'Buffer'],
          process: ['process'],
        })
      );

      // –ù–æ–¥–æ–≤—ã–µ –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ
      config.node = { ...(config.node || {}), fs: 'empty', net: 'empty', tls: 'empty' };
      return config;
    },
  },

  // üëâ –û—Ç–∫–ª—é—á–∞–µ–º overlay –≤–µ–±–ø–∞–∫-–¥–µ–≤-—Å–µ—Ä–≤–µ—Ä–∞
  devServer: (devServerConfig) => {
    // –¥–ª—è webpack-dev-server v3 (CRA4) —ç—Ç–æ –ø–æ–ª–µ –µ—Å—Ç—å
    devServerConfig.overlay = false;
    return devServerConfig;
  },
};
